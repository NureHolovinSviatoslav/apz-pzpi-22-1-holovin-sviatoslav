Харківський університет радіоелектроніки
Факультет комп'ютерних наук
Кафедра програмної інженерії












ЗВІТ
до практичного заняття з дисципліни
"Архітектура програмного забезпечення"
на тему: "Патерн проєктування Спостерігач"
























Виконав ст. гр. ПЗПІ-22-1
Головін Святослав Юрійович


Перевірив
Лещинський Володимир Олександрович




















Харків 2025 р.
ІСТОРІЯ ЗМІН


№
	Дата
	Версія звіту
	Опис змін та виправлень
	1
	08.03.2025
	0.1
	Створено та наповнено розділ “Завдання”
	2
	08.03.2025
	0.2
	Створено та наповнено розділ “Опис виконаної роботи”
	3
	08.03.2025
	0.3
	Створено та наповнено розділ “Висновки”
	4
	08.03.2025
	0.4
	Додано додаток А
	5
	08.03.2025
	0.5
	Додано додаток Б
	6
	08.03.2025
	0.6
	Додано додаток В
	________________


ЗАВДАННЯ


Ознайомитися з патернами проєктування програмного забезпечення та навчитися їх правильно застосовувати на практиці.
________________


ОПИС ВИКОНАНОЇ РОБОТИ


Темою роботи був обраний патерн Спостерігач. Знайдемо потрібну інформацію про нього використовуючи відповідну літературу.
Структуруємо отримані знання в доповідь. На основі доповіді створимо презентацію.
Складемо звіт для демонстрації ходу виконання роботи, який міститиме необхідні додатки, а саме: посилання на відеозапис доповіді та хронологічний опис відео, наведений в додатку А, слайди презентації, наведені в додатку Б та приклади програмного коду, наведені в додатку В.


________________


ВИСНОВКИ


        У ході виконання роботи було вивчено основні патерни проєктування програмного забезпечення та створено презентацію на відповідну тему.
________________


ДОДАТОК А


Посилання на відеозапис доповіді та текст хронологічного опису доповіді


Відеозапис доповіді на YouTube: https://


Хронологічний опис доповіді:


________________


ДОДАТОК Б


Слайди презентації доповіді


  

Рисунок Б.1 - Початковий слайд


  

Рисунок Б.2 - Вступ


  

Рисунок Б.3 - Основна концепція


  

Рисунок Б.4 - Основні компоненти


  

Рисунок Б.5 - UML-діаграма патерну


  

Рисунок Б.6 - Приклад коду на Python


  

Рисунок Б.7 - Пояснення Python-коду


  

Рисунок Б.8 - Переваги та недоліки


  

Рисунок Б.9 - Джерела








________________


ДОДАТОК В


Приклади програмного коду


  1  class Subject:
  2      def __init__(self):
  3          self._observers = []
  4          self._state = None
  5
  6      def attach(self, observer):
  7          self._observers.append(observer)
  8
  9      def detach(self, observer):
 10          self._observers.remove(observer)
 11
 12      def notify(self):
 13          for observer in self._observers:
 14              observer.update(self._state)
 15
 16      def set_state(self, state):
 17          self._state = state
 18          self.notify()
 19
 20  class Observer:
 21      def update(self, state):
 22          pass
 23
 24  class ConcreteObserver(Observer):
 25      def update(self, state):
 26          print(f"Спостерігач отримав новий стан: {state}")
 27
 28  # Використання паттерну
 29  subject = Subject()
 30  observer1 = ConcreteObserver()
 31  observer2 = ConcreteObserver()
 32
 33  subject.attach(observer1)
 34  subject.attach(observer2)
 35  subject.set_state("Активний")